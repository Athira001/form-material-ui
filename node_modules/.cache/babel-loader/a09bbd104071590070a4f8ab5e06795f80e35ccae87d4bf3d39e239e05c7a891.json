{"ast":null,"code":"var _jsxFileName = \"/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/CountrySelect.tsx\",\n  _s = $RefreshSig$();\nimport countries from \"i18n-iso-countries\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\nconst useStyles = makeStyles(theme => ({\n  label: {\n    top: '5px',\n    backgroundColor: '#fff',\n    left: '8px',\n    background: '#fff',\n    padding: '4px',\n    zIndex: 1\n  },\n  select: {\n    padding: '8px',\n    border: '1px solid #ccc'\n  },\n  FormControl: {},\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center',\n    gridGap: '12px'\n  }\n}));\nexport const CountrySelect = _ref => {\n  _s();\n  let {\n    value = {\n      code: \"US\",\n      name: \"United States of Ameria\"\n    },\n    onChange\n  } = _ref;\n  const EN_COUNTRIES = countries.getNames(\"en\", {\n    select: \"official\"\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    className: classes.FormControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"country-simple\",\n      className: classes.label,\n      children: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: value.code,\n      onChange: event => {\n        const code = event.value;\n        onChange({\n          code: code,\n          name: EN_COUNTRIES[code]\n        });\n      },\n      inputProps: {\n        name: \"country\",\n        id: \"country-simple\"\n      },\n      className: classes.select,\n      children: Object.entries(EN_COUNTRIES).map(_ref2 => {\n        let [code, name] = _ref2;\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: code,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItem,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: name\n              // Country flags are from this NPM package: https://www.npmjs.com/package/country-flag-icons\n              ,\n              src: `http://purecatamphetamine.github.io/country-flag-icons/3x2/${code}.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CountrySelect, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CountrySelect;\nexport default CountrySelect;\nvar _c;\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"names":["countries","Avatar","Typography","FormControl","InputLabel","MenuItem","Select","makeStyles","jsxDEV","_jsxDEV","registerLocale","require","useStyles","theme","label","top","backgroundColor","left","background","padding","zIndex","select","border","menuItem","display","alignItems","gridGap","CountrySelect","_ref","_s","value","code","name","onChange","EN_COUNTRIES","getNames","classes","fullWidth","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","event","inputProps","id","Object","entries","map","_ref2","alt","src","_c","$RefreshReg$"],"sources":["/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/CountrySelect.tsx"],"sourcesContent":["import countries from \"i18n-iso-countries\";\n\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from '@material-ui/core';\n\ncountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    top: '5px',\n    backgroundColor:'#fff',\n    left: '8px',\n    background: '#fff',\n    padding: '4px',\n    zIndex: 1\n  },\n  select: {\n    padding: '8px',\n    border: '1px solid #ccc',\n  },\n  FormControl: {\n\n  },\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center',\n    gridGap: '12px'\n  }\n}));\n\ninterface CountrySelectProps {\n  value?: any;\n  onChange?: (value: any) => void;\n}\n\nexport const CountrySelect = ({\n  value = {\n    code: \"US\",\n    name: \"United States of Ameria\",\n  },\n  onChange,\n}: CountrySelectProps) => {\n  const EN_COUNTRIES = countries.getNames(\"en\", { select: \"official\" });\n  const classes = useStyles();\n\n  return (\n    <FormControl fullWidth  className={classes.FormControl}>\n      <InputLabel htmlFor=\"country-simple\"  className={classes.label}>Country</InputLabel>\n      <Select\n        value={value.code}\n        onChange={(event: any) => {\n          const code = event.value;\n          onChange({\n            code: code,\n            name: EN_COUNTRIES[code],\n          });\n        }}\n        inputProps={{\n          name: \"country\",\n          id: \"country-simple\",\n        }}\n        className={classes.select}\n      >\n        {Object.entries(EN_COUNTRIES).map(([code, name]) => (\n          <MenuItem value={code}>\n            <div className={classes.menuItem}>\n            <Avatar\n              alt={name}\n              // Country flags are from this NPM package: https://www.npmjs.com/package/country-flag-icons\n              src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${code}.svg`}\n            />\n            <Typography>{name}</Typography>\n            </div>\n          </MenuItem>\n        ))}\n\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountrySelect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}