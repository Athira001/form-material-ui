{"ast":null,"code":"var _jsxFileName = \"/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/CountrySelect.tsx\",\n  _s = $RefreshSig$();\nimport countries from \"i18n-iso-countries\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from '@material-ui/core';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\nconst useStyles = makeStyles(() => createStyles({\n  myButton: {\n    composes: 'myButton'\n  }\n}));\nexport const CountrySelect = _ref => {\n  _s();\n  let {\n    value = {\n      code: \"US\",\n      name: \"United States of Ameria\"\n    },\n    onChange\n  } = _ref;\n  const EN_COUNTRIES = countries.getNames(\"en\", {\n    select: \"official\"\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"country-simple\",\n      className: classes.label,\n      children: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: value.code,\n      onChange: event => {\n        const code = event.value;\n        onChange({\n          code: code,\n          name: EN_COUNTRIES[code]\n        });\n      },\n      inputProps: {\n        name: \"country\",\n        id: \"country-simple\"\n      },\n      className: classes.select,\n      children: Object.entries(EN_COUNTRIES).map(_ref2 => {\n        let [code, name] = _ref2;\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: code,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItem,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: name\n              // Country flags are from this NPM package: https://www.npmjs.com/package/country-flag-icons\n              ,\n              src: `http://purecatamphetamine.github.io/country-flag-icons/3x2/${code}.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CountrySelect, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CountrySelect;\nexport default CountrySelect;\nvar _c;\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"names":["countries","Avatar","Typography","FormControl","InputLabel","MenuItem","Select","makeStyles","jsxDEV","_jsxDEV","registerLocale","require","useStyles","createStyles","myButton","composes","CountrySelect","_ref","_s","value","code","name","onChange","EN_COUNTRIES","getNames","select","classes","fullWidth","children","htmlFor","className","label","fileName","_jsxFileName","lineNumber","columnNumber","event","inputProps","id","Object","entries","map","_ref2","menuItem","alt","src","_c","$RefreshReg$"],"sources":["/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/CountrySelect.tsx"],"sourcesContent":["import countries from \"i18n-iso-countries\";\n\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from '@material-ui/core';\nimport './styles.css';\ncountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    myButton: {\n      composes: 'myButton',\n    },\n  })\n);\n\ninterface CountrySelectProps {\n  value?: any;\n  onChange?: (value: any) => void;\n}\n\nexport const CountrySelect = ({\n  value = {\n    code: \"US\",\n    name: \"United States of Ameria\",\n  },\n  onChange,\n}: CountrySelectProps) => {\n  const EN_COUNTRIES = countries.getNames(\"en\", { select: \"official\" });\n  const classes = useStyles();\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"country-simple\"  className={classes.label}>Country</InputLabel>\n      <Select\n        value={value.code}\n        onChange={(event: any) => {\n          const code = event.value;\n          onChange({\n            code: code,\n            name: EN_COUNTRIES[code],\n          });\n        }}\n        inputProps={{\n          name: \"country\",\n          id: \"country-simple\",\n        }}\n        className={classes.select}\n      >\n        {Object.entries(EN_COUNTRIES).map(([code, name]) => (\n          <MenuItem value={code}>\n            <div className={classes.menuItem}>\n            <Avatar\n              alt={name}\n              // Country flags are from this NPM package: https://www.npmjs.com/package/country-flag-icons\n              src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${code}.svg`}\n            />\n            <Typography>{name}</Typography>\n            </div>\n          </MenuItem>\n        ))}\n\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountrySelect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}