{"ast":null,"code":"var _jsxFileName = \"/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/SettingsSelector.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport \"./styles.css\";\nimport { CountrySelect } from \"./CountrySelect\";\nimport CurrencySelect from \"./CurrencySelect\";\nimport LanguageSelect from \"./LanguageSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsSelector = () => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [country, setCountry] = React.useState({\n    code: \"US\",\n    name: \"United States of Ameria\"\n  });\n  const [currency, setCurrency] = React.useState(\"USD\");\n  const [language, setLanguage] = React.useState(\"en\");\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  return React.useMemo(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        alt: \"flag\",\n        width: 20,\n        src: \"https://catamphetamine.gitlab.io/country-flag-icons/3x2/AC.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \"- (\", currency, \" - \", language, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      maxWidth: \"sm\",\n      fullScreen: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Change region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Select your region, currency and language.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CountrySelect, {\n          value: country,\n          onChange: value => setCountry(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(CurrencySelect, {\n              value: currency,\n              onChange: event => setCurrency(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(LanguageSelect, {\n              value: language,\n              onChange: event => setLanguage(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          autoFocus: true,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this), [country, open, language, currency]);\n};\n_s(SettingsSelector, \"mA9E0Pr3zYpt1qcLRUV/4hmZV4U=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = SettingsSelector;\nexport default SettingsSelector;\nvar _c;\n$RefreshReg$(_c, \"SettingsSelector\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","useMediaQuery","useTheme","CountrySelect","CurrencySelect","LanguageSelect","jsxDEV","_jsxDEV","SettingsSelector","_s","open","setOpen","useState","handleClickOpen","handleClose","country","setCountry","code","name","currency","setCurrency","language","setLanguage","theme","fullScreen","breakpoints","down","useMemo","children","variant","color","onClick","className","alt","width","src","fileName","_jsxFileName","lineNumber","columnNumber","onClose","maxWidth","id","value","onChange","container","spacing","item","xs","event","target","fullWidth","autoFocus","_c","$RefreshReg$"],"sources":["/Users/athira/qt/Reviewly-Candidate-ce272b4c-20a9-4e8f-9cd7-633f47de81b3/src/stories/SettingsSelector.tsx"],"sourcesContent":["import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nimport \"./styles.css\";\n\nimport { CountrySelect } from \"./CountrySelect\";\nimport CurrencySelect from \"./CurrencySelect\";\nimport LanguageSelect from \"./LanguageSelect\";\n\nconst SettingsSelector = (): JSX.Element => {\n  const [open, setOpen] = React.useState<any>(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  interface SateIn {\n    code?: string;\n    name?: string\n  }\n  \n\n  const [country, setCountry] = React.useState<SateIn>({\n    code: \"US\",\n    name: \"United States of Ameria\",\n  });\n  const [currency, setCurrency] = React.useState<any>(\"USD\");\n  const [language, setLanguage] = React.useState<any>(\"en\");\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  return React.useMemo(\n    () => (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <img className=\"image\" alt=\"flag\" width={20} src=\"https://catamphetamine.gitlab.io/country-flag-icons/3x2/AC.svg\" />\n         - ({currency} - {language})\n        </Button>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth={\"sm\"}\n          fullScreen\n        >\n          <DialogTitle id=\"alert-dialog-title\">Change region</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Select your region, currency and language.\n            </DialogContentText>\n\n            <CountrySelect\n              value={country}\n              onChange={(value) => setCountry(value)}\n            />\n\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <CurrencySelect\n                  value={currency}\n                  onChange={(event) => setCurrency(event.target.value)}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <LanguageSelect\n                  value={language}\n                  onChange={(event) => setLanguage(event.target.value)}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" fullWidth>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              autoFocus\n            >\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    ),\n    [country, open, language, currency]\n  );\n};\n\nexport default SettingsSelector;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}